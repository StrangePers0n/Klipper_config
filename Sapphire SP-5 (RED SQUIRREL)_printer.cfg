# This file contains common pin mappings for the BigTreeTech SKR 2.
# To use this config, the firmware should be compiled for the
# STM32F407 with a "32KiB bootloader".

# In newer versions of this board shipped in late 2021 the STM32F429
# is used, if this is the case compile for this with a "32KiB bootloader"
# You will need to check the chip on your board to identify which you have.
#
# The "make flash" command does not work on the SKR 2. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR 2
# with that SD card.

# See docs/Config_Reference.md for a description of parameters.

# Note: The initial revision of this board has a flaw that can cause
# damage to itself and other boards. Be sure to verify the board is
# not impacted by this flaw before using it.

#########################################################
#I. GENERAL CONFIGURATION VER 0.2
#########################################################

################################################
#1. COREXY & BEDSCREWS,MESH, MCU & KILLER FEATURE
################################################

[printer]
kinematics: corexy
max_velocity: 250
max_accel: 6000
max_z_velocity: 15
max_z_accel: 100
square_corner_velocity: 5.0

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f429xx_360037001151303239383034-if00
restart_method: command

################
# Due to BTT implementing a Marlin-specific safety feature,
# "anti-reversal stepper protection", this pin needs pulling
# high to pass power to stepper drivers and most FETs
#IMPORTANT#
#Apparently the stepper checker mosfet pulls PC13 high to activate the motors/heaters.
#Make sure the stepper drivers are in the correct way or say goodbye to the steppers
################

[output_pin motor_power] #The "killer" feature needed for SKR2 board
pin: PC13
value: 1

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

########################################
#2. STEPPER CONFIGURATION
########################################

[stepper_x]
step_pin: PE2
dir_pin: !PE1
enable_pin: !PE3
microsteps: 32
rotation_distance: 40
endstop_pin: ^!PC1
position_endstop: 0
position_max: 300
homing_speed: 50

[stepper_y]
step_pin: PD5
dir_pin: !PD4
enable_pin: !PD6
microsteps: 32
rotation_distance: 40
endstop_pin: ^!PC3
position_endstop: 300
position_max: 300
homing_speed: 50

[stepper_z]
step_pin: PA15
dir_pin: !PA8
enable_pin: !PD1
microsteps: 32
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 340
position_min: -5 # Needed for z-offset calibration and Z_tilt setting.

[stepper_z1]
step_pin: PD11
dir_pin: !PD10
enable_pin: !PD13
microsteps: 32
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
#position_max: 340 #Not needed

########################################
#3. ADVANVED STEPPER CONFIGURATION
########################################

[tmc2209 stepper_x]
uart_pin: PE0
run_current: 0.800
stealthchop_threshold: 999999

[tmc2209 stepper_y]
uart_pin: PD3
run_current: 0.800
stealthchop_threshold: 999999

[tmc2209 stepper_z]
uart_pin: PD0
run_current: 0.800
stealthchop_threshold: 999999

[tmc2209 stepper_z1]
uart_pin: PD12
run_current: 0.800
stealthchop_threshold: 999999

[tmc2209 extruder]
uart_pin: PC6
run_current: 0.85 #MOONS motor should good until 0.85
interpolate: True

########################################################
#4. EXTRUDER & BED & BLTOUCH SETTINGS & FILAMENT RUNOUT
########################################################

[extruder] #Sherpa Mini with MOONS motor
step_pin: PD15
dir_pin: !PD14
enable_pin: !PC7
microsteps: 16
gear_ratio: 50:10
full_steps_per_rotation: 200
max_extrude_only_distance: 1400.0
max_extrude_only_velocity: 75.0
max_extrude_only_accel: 1500.0
rotation_distance: 22.67895 #5mm shaft
nozzle_diameter: 0.600
filament_diameter: 1.750
heater_pin: PB3
sensor_type: EPCOS 100K B57560G104F # This is the stock sensor for Sapphire PLUS or SP-5
sensor_pin: PA2
pressure_advance: 0.0389
#control: pid
#pid_Kp: 12.49
#pid_Ki: 0.5636
#pid_Kd: 69.1945
min_temp: 0
max_temp: 250

[verify_heater extruder]
max_error: 180 #My extruder heating element is quite crappy, so i needed to increase allowable error count to complete PID tuning

[heater_bed]
heater_pin: PD7
sensor_type: EPCOS 100K B57560G104F # This is the stock sensor for Sapphire PLUS or SP-5 
sensor_pin: PA1
#control: pid
#pid_Kp: 229.2773
#pid_Ki: 44.7807
#pid_Kd: 792.5999
min_temp: 0
max_temp: 80

[bltouch] #Referenced in STEPPER config as <endstop_pin: probe:z_virtual_endstop> for Z
sensor_pin: ^PC0
control_pin: PE5
y_offset: -38.5 #Diamond mount offset value
#z_offset: 2.4475

[filament_switch_sensor RunoutSensor]
pause_on_runout: False
runout_gcode: PAUSE
insert_gcode: RESUME
switch_pin: PC2

[safe_z_home]
home_xy_position: 150, 188.5 # Change coordinates to the center of your print bed
speed: 50
z_hop: 10 # Move up 10mm just to be safe
z_hop_speed: 5

[bed_screws]
screw1: 35,35
screw2: 275,35
screw3: 275,275
screw4: 35,275

[bed_mesh]
speed: 80
horizontal_move_z: 5

mesh_min: 10, 15
mesh_max: 290, 260
probe_count: 4,4
mesh_pps: 2, 3
algorithm: bicubic
bicubic_tension: 0.2
fade_start: 1
fade_end: 10

[z_tilt]
z_positions:-15,155
            325,155
points: 10,185
        290,185
speed: 75
horizontal_move_z: 5
retries: 5
retry_tolerance: 0.05

##############################################
#5. COOLING SETTINGS 
##############################################

[fan] #Part cooling fan
pin: PB7

[heater_fan Hotend] #Hotend
pin: PB6
heater: extruder
heater_temp: 40
fan_speed: 1.0
shutdown_speed: 1

[heater_fan Control_board] #Control board
pin: PB5
heater_temp: 10.0 #Basically always on
fan_speed: 1
#shutdown_speed: 1

#############################################
#6. INPUT SHAPER (ADXL1345)
#############################################

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    150, 150, 20  # an example
    
[input_shaper]
shaper_freq_x: 90.4
shaper_type_x: ei
shaper_freq_y: 57
shaper_type_y: mzv


############################################################
#7. DISPLAY EXP1 / EXP2 (display) pins (CURRENTLY HEADLESS)
############################################################

#[board_pins]
#aliases:
    # EXP1 header
#    EXP1_1=PC5, EXP1_3=PB1, EXP1_5=PE10, EXP1_7=PE12, EXP1_9=<GND>,
#    EXP1_2=PB0, EXP1_4=PE9, EXP1_6=PE11, EXP1_8=PE13, EXP1_10=<5V>,
#    # EXP2 header
#    EXP2_1=PA6, EXP2_3=PE7, EXP2_5=PB2, EXP2_7=PC4,   EXP2_9=<GND>,
#    EXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.

########################################
# MACRO SECTION
########################################

[gcode_macro START_PRINT]
gcode:
   # Load variables
   {% set bed_temp = params.BED_TEMP|default(40)|int %}
   {% set extruder_temp = params.EXTRUDER_TEMP|default(200)|int %}
   {% set chamber_temp = params.CHAMBER_TEMP|default(0)|int %}
   # Load bed mesh
   #BED_MESH_PROFILE LOAD={bed_temp}    # Set and wait for bed to reach temperature
   M117 Waiting on bed
   M190 s{bed_temp}
   M104 S160
   # Set GCODE offset
   # SET_GCODE_OFFSET Z=0
   # Home
   M117 Homing
   G28
   Z_TILT_ADJUST
   # Move Z up
   #G1 Z10.0 F3000
   # Reset extruder
   G92 E0
   # Set extruder temperature
   M117 Waiting on nozzle
   M104 S{extruder_temp}
   # Move Z axis up a little to prevent scratching heat bed
   G1 Z2.0 F3000
   # Move to start position
   G1 X0.1 Y20 Z2.0 F5000.0
   # Wait for Extruder temperature
   M109 S{extruder_temp}
   M117 Purging
   # Move to start for purge line
   G1 X0.1 Y20 Z0.3 F5000.0
   # Draw 1st line
   G1 X0.1 Y150.0 Z0.3 F1500.0 E15
   # Move to side a little
   G1 X0.4 Y150.0 Z0.3 F5000.0
   # Draw 2nd line
   G1 X0.4 Y20 Z0.3 F1500.0 E30
   # Reset extruder
   G92 E0
   # Move Z up a little
   G1 Z5.0 F3000
   M117 Printing

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BASE_BED_MESH_CALIBRATE
gcode:
    #before the original gcode
    BED_MESH_CLEAR
    QUAD_GANTRY_LEVEL
    G1 X125 Y125 Z5 F6000
    #the original gcode
    BASE_BED_MESH_CALIBRATE
    #after the original gcode

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 17.977
#*# pid_ki = 0.651
#*# pid_kd = 124.039
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 74.628
#*# pid_ki = 1.106
#*# pid_kd = 1259.349
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.352500, 0.085000, 0.032500, 0.103750
#*# 	  0.131250, 0.013750, 0.006250, 0.113750
#*# 	  0.150000, -0.043750, 0.015000, 0.191250
#*# 	  0.155000, -0.093750, -0.060000, 0.152500
#*# tension = 0.2
#*# min_x = 10.0
#*# algo = bicubic
#*# y_count = 4
#*# mesh_y_pps = 3
#*# min_y = 15.0
#*# x_count = 4
#*# max_y = 259.98
#*# mesh_x_pps = 2
#*# max_x = 289.99
#*#
#*# [bltouch]
#*# z_offset = 2.350
